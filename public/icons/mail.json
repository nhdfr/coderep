{
	"name": "mail",
	"type": "registry:ui",
	"registryDependencies": [],
	"dependencies": ["motion"],
	"devDependencies": [],
	"tailwind": {},
	"cssVars": {
		"light": {},
		"dark": {}
	},
	"keywords": [
		"email",
		"envelope",
		"communication",
		"message",
		"mailbox",
		"inbox",
		"newsletter"
	],
	"files": [
		{
			"path": "MailIcon.tsx",
			"content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\n\nexport interface MailIconHandle {\n\tstartAnimation: () => void;\n\tstopAnimation: () => void;\n}\n\ninterface MailIconProps extends HTMLMotionProps<\"div\"> {\n\tsize?: number;\n\tspeed?: number;\n}\n\nconst MailIcon = forwardRef<MailIconHandle, MailIconProps>(\n\t(\n\t\t{ onMouseEnter, onMouseLeave, className, size = 28, speed = 1, ...props },\n\t\tref,\n\t) => {\n\t\tconst flapControls = useAnimation();\n\t\tconst bodyControls = useAnimation();\n\t\tconst containerControls = useAnimation();\n\t\tconst reduced = useReducedMotion();\n\t\tconst isControlled = useRef(false);\n\n\t\tuseImperativeHandle(ref, () => {\n\t\t\tisControlled.current = true;\n\t\t\treturn {\n\t\t\t\tstartAnimation: () => {\n\t\t\t\t\tif (reduced) {\n\t\t\t\t\t\tcontainerControls.start(\"normal\");\n\t\t\t\t\t\tflapControls.start(\"normal\");\n\t\t\t\t\t\tbodyControls.start(\"normal\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontainerControls.start(\"animate\");\n\t\t\t\t\t\tflapControls.start(\"animate\");\n\t\t\t\t\t\tbodyControls.start(\"animate\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstopAnimation: () => {\n\t\t\t\t\tcontainerControls.start(\"normal\");\n\t\t\t\t\tflapControls.start(\"normal\");\n\t\t\t\t\tbodyControls.start(\"normal\");\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\tconst handleEnter = useCallback(\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (reduced) return;\n\t\t\t\tif (!isControlled.current) {\n\t\t\t\t\tcontainerControls.start(\"animate\");\n\t\t\t\t\tflapControls.start(\"animate\");\n\t\t\t\t\tbodyControls.start(\"animate\");\n\t\t\t\t} else onMouseEnter?.(e as any);\n\t\t\t},\n\t\t\t[containerControls, flapControls, bodyControls, reduced, onMouseEnter],\n\t\t);\n\n\t\tconst handleLeave = useCallback(\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (!isControlled.current) {\n\t\t\t\t\tcontainerControls.start(\"normal\");\n\t\t\t\t\tflapControls.start(\"normal\");\n\t\t\t\t\tbodyControls.start(\"normal\");\n\t\t\t\t} else onMouseLeave?.(e as any);\n\t\t\t},\n\t\t\t[containerControls, flapControls, bodyControls, onMouseLeave],\n\t\t);\n\n\t\tconst containerVariants: Variants = {\n\t\t\tnormal: { scale: 1 },\n\t\t\tanimate: {\n\t\t\t\tscale: [1, 1.04, 1],\n\t\t\t\ttransition: { duration: 0.36 * speed, ease: \"easeOut\" },\n\t\t\t},\n\t\t};\n\n\t\tconst flapVariants: Variants = {\n\t\t\tnormal: { rotateX: 0, translateY: 0, transformOrigin: \"12px 6px\" },\n\t\t\tanimate: {\n\t\t\t\trotateX: [-0, -12, 2, 0],\n\t\t\t\ttranslateY: [0, -1.6, 0.6, 0],\n\t\t\t\ttransition: {\n\t\t\t\t\tduration: 0.45 * speed,\n\t\t\t\t\tease: \"easeOut\",\n\t\t\t\t\ttimes: [0, 0.5, 0.85, 1],\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\tconst bodyVariants: Variants = {\n\t\t\tnormal: { opacity: 1 },\n\t\t\tanimate: {\n\t\t\t\topacity: [1, 0.95, 1],\n\t\t\t\ttransition: { duration: 0.45 * speed, ease: \"easeOut\" },\n\t\t\t},\n\t\t};\n\n\t\treturn (\n\t\t\t<motion.div\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\n\t\t\t\tonMouseEnter={handleEnter}\n\t\t\t\tonMouseLeave={handleLeave}\n\t\t\t\t{...props}\n\t\t\t\tinitial=\"normal\"\n\t\t\t\tanimate={containerControls}\n\t\t\t\tvariants={containerVariants}\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\twidth={size}\n\t\t\t\t\theight={size}\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"m22 7-8.991 5.727a2 2 0 0 1-2.009 0L2 7\"\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tanimate={flapControls}\n\t\t\t\t\t\tvariants={flapVariants}\n\t\t\t\t\t\tstyle={{ transformStyle: \"preserve-3d\" }}\n\t\t\t\t\t/>\n\t\t\t\t\t<motion.rect\n\t\t\t\t\t\tx=\"2\"\n\t\t\t\t\t\ty=\"4\"\n\t\t\t\t\t\twidth=\"20\"\n\t\t\t\t\t\theight=\"16\"\n\t\t\t\t\t\trx=\"2\"\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tanimate={bodyControls}\n\t\t\t\t\t\tvariants={bodyVariants}\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\t\t\t</motion.div>\n\t\t);\n\t},\n);\n\nMailIcon.displayName = \"MailIcon\";\nexport { MailIcon };\n",
			"type": "registry:ui"
		}
	]
}
