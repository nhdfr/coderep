{
	"name": "folder-open",
	"type": "registry:ui",
	"registryDependencies": [],
	"dependencies": ["motion"],
	"devDependencies": [],
	"tailwind": {},
	"cssVars": {
		"light": {},
		"dark": {}
	},
	"keywords": ["file", "document", "folder"],
	"files": [
		{
			"path": "FolderOpenIcon.tsx",
			"content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\n\nexport interface FolderOpenIconHandle {\n\tstartAnimation: () => void;\n\tstopAnimation: () => void;\n}\n\ninterface FolderOpenIconProps extends HTMLMotionProps<\"div\"> {\n\tsize?: number;\n\tspeed?: number;\n}\n\nconst FolderOpenIcon = forwardRef<FolderOpenIconHandle, FolderOpenIconProps>(\n\t(\n\t\t{ onMouseEnter, onMouseLeave, className, size = 28, speed = 1, ...props },\n\t\tref,\n\t) => {\n\t\tconst folderControls = useAnimation();\n\t\tconst paperControls = useAnimation();\n\t\tconst reduced = useReducedMotion();\n\t\tconst isControlled = useRef(false);\n\n\t\tuseImperativeHandle(ref, () => {\n\t\t\tisControlled.current = true;\n\t\t\treturn {\n\t\t\t\tstartAnimation: () => {\n\t\t\t\t\tif (reduced) {\n\t\t\t\t\t\tfolderControls.start(\"normal\");\n\t\t\t\t\t\tpaperControls.start(\"normal\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfolderControls.start(\"animate\");\n\t\t\t\t\t\tpaperControls.start(\"animate\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstopAnimation: () => {\n\t\t\t\t\tfolderControls.start(\"normal\");\n\t\t\t\t\tpaperControls.start(\"normal\");\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\tconst handleEnter = useCallback(\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (reduced) return;\n\t\t\t\tif (!isControlled.current) {\n\t\t\t\t\tfolderControls.start(\"animate\");\n\t\t\t\t\tpaperControls.start(\"animate\");\n\t\t\t\t} else {\n\t\t\t\t\tonMouseEnter?.(e as any);\n\t\t\t\t}\n\t\t\t},\n\t\t\t[folderControls, paperControls, reduced, onMouseEnter],\n\t\t);\n\n\t\tconst handleLeave = useCallback(\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (!isControlled.current) {\n\t\t\t\t\tfolderControls.start(\"normal\");\n\t\t\t\t\tpaperControls.start(\"normal\");\n\t\t\t\t} else {\n\t\t\t\t\tonMouseLeave?.(e as any);\n\t\t\t\t}\n\t\t\t},\n\t\t\t[folderControls, paperControls, onMouseLeave],\n\t\t);\n\n\t\tconst folderVariants: Variants = {\n\t\t\tnormal: { scale: 1, rotate: 0, y: 0 },\n\t\t\tanimate: {\n\t\t\t\tscale: [1, 1.05, 0.97, 1],\n\t\t\t\trotate: [0, -2, 2, 0],\n\t\t\t\ty: [0, -1.5, 0.5, 0],\n\t\t\t\ttransition: { duration: 0.9 * speed, ease: \"easeInOut\" },\n\t\t\t},\n\t\t};\n\n\t\tconst paperVariants: Variants = {\n\t\t\tnormal: { y: 0, opacity: 0 },\n\t\t\tanimate: {\n\t\t\t\ty: [-6, 0],\n\t\t\t\topacity: [0, 1, 0],\n\t\t\t\ttransition: { duration: 1 * speed, ease: \"easeInOut\", delay: 0.2 },\n\t\t\t},\n\t\t};\n\n\t\treturn (\n\t\t\t<motion.div\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\n\t\t\t\tonMouseEnter={handleEnter}\n\t\t\t\tonMouseLeave={handleLeave}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<motion.svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\twidth={size}\n\t\t\t\t\theight={size}\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"m6 14 1.5-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.54 6a2 2 0 0 1-1.95 1.5H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H18a2 2 0 0 1 2 2v2\"\n\t\t\t\t\t\tanimate={folderControls}\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tvariants={folderVariants}\n\t\t\t\t\t/>\n\t\t\t\t\t<motion.rect\n\t\t\t\t\t\tx=\"7\"\n\t\t\t\t\t\ty=\"11\"\n\t\t\t\t\t\twidth=\"10\"\n\t\t\t\t\t\theight=\"6\"\n\t\t\t\t\t\trx=\"1\"\n\t\t\t\t\t\tanimate={paperControls}\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tvariants={paperVariants}\n\t\t\t\t\t/>\n\t\t\t\t</motion.svg>\n\t\t\t</motion.div>\n\t\t);\n\t},\n);\n\nFolderOpenIcon.displayName = \"FolderOpenIcon\";\nexport { FolderOpenIcon };\n",
			"type": "registry:ui"
		}
	]
}
