{
	"name": "blocks",
	"type": "registry:ui",
	"registryDependencies": [],
	"dependencies": ["motion"],
	"devDependencies": [],
	"tailwind": {},
	"cssVars": {
		"light": {},
		"dark": {}
	},
	"keywords": [
		"addon",
		"plugin",
		"integration",
		"extension",
		"package",
		"build",
		"stack",
		"toys",
		"kids",
		"children",
		"learning",
		"squares",
		"corne"
	],
	"files": [
		{
			"path": "BlocksIcon.tsx",
			"content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\n\nexport interface BlocksIconHandle {\n\tstartAnimation: () => void;\n\tstopAnimation: () => void;\n}\n\ninterface BlocksIconProps extends HTMLMotionProps<\"div\"> {\n\tsize?: number;\n\tspeed?: number;\n}\n\nconst BlocksIcon = forwardRef<BlocksIconHandle, BlocksIconProps>(\n\t(\n\t\t{ onMouseEnter, onMouseLeave, className, size = 28, speed = 1, ...props },\n\t\tref,\n\t) => {\n\t\tconst controls = useAnimation();\n\t\tconst reduced = useReducedMotion();\n\t\tconst isControlled = useRef(false);\n\n\t\tuseImperativeHandle(ref, () => {\n\t\t\tisControlled.current = true;\n\t\t\treturn {\n\t\t\t\tstartAnimation: () =>\n\t\t\t\t\treduced ? controls.start(\"normal\") : controls.start(\"animate\"),\n\t\t\t\tstopAnimation: () => controls.start(\"normal\"),\n\t\t\t};\n\t\t});\n\n\t\tconst handleEnter = useCallback(\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (reduced) return;\n\t\t\t\tif (!isControlled.current) controls.start(\"animate\");\n\t\t\t\telse onMouseEnter?.(e as any);\n\t\t\t},\n\t\t\t[controls, onMouseEnter, reduced],\n\t\t);\n\n\t\tconst handleLeave = useCallback(\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (!isControlled.current) controls.start(\"normal\");\n\t\t\t\telse onMouseLeave?.(e as any);\n\t\t\t},\n\t\t\t[controls, onMouseLeave],\n\t\t);\n\n\t\tconst svgVariants: Variants = {\n\t\t\tnormal: { rotate: 0, scale: 1 },\n\t\t\tanimate: {\n\t\t\t\trotate: [0, -2, 2, 0],\n\t\t\t\tscale: [1, 1.05, 0.95, 1],\n\t\t\t\ttransition: {\n\t\t\t\t\tduration: 1.6 * speed,\n\t\t\t\t\tease: [0.42, 0, 0.58, 1],\n\t\t\t\t\trepeat: 0,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\tconst pathVariants: Variants = {\n\t\t\tnormal: { pathLength: 1, opacity: 1 },\n\t\t\tanimate: {\n\t\t\t\tpathLength: [0, 1],\n\t\t\t\topacity: [0.5, 1],\n\t\t\t\ttransition: {\n\t\t\t\t\tduration: 1.4 * speed,\n\t\t\t\t\tease: [0.42, 0, 0.58, 1],\n\t\t\t\t\trepeat: 0,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\tconst rectVariants: Variants = {\n\t\t\tnormal: { scale: 1 },\n\t\t\tanimate: {\n\t\t\t\tscale: [1, 1.2, 0.9, 1],\n\t\t\t\ttransition: {\n\t\t\t\t\tduration: 1.2 * speed,\n\t\t\t\t\tease: [0.42, 0, 0.58, 1],\n\t\t\t\t\trepeat: 0,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\treturn (\n\t\t\t<motion.div\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\n\t\t\t\tonMouseEnter={handleEnter}\n\t\t\t\tonMouseLeave={handleLeave}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<motion.svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\twidth={size}\n\t\t\t\t\theight={size}\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\tanimate={controls}\n\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\tvariants={svgVariants}\n\t\t\t\t>\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"M10 22V7a1 1 0 0 0-1-1H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-5a1 1 0 0 0-1-1H2\"\n\t\t\t\t\t\tvariants={pathVariants}\n\t\t\t\t\t/>\n\t\t\t\t\t<motion.rect\n\t\t\t\t\t\tx=\"14\"\n\t\t\t\t\t\ty=\"2\"\n\t\t\t\t\t\twidth=\"8\"\n\t\t\t\t\t\theight=\"8\"\n\t\t\t\t\t\trx=\"1\"\n\t\t\t\t\t\tvariants={rectVariants}\n\t\t\t\t\t/>\n\t\t\t\t</motion.svg>\n\t\t\t</motion.div>\n\t\t);\n\t},\n);\n\nBlocksIcon.displayName = \"BlocksIcon\";\nexport { BlocksIcon };\n",
			"type": "registry:ui"
		}
	]
}
