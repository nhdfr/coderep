{
	"name": "signal",
	"type": "registry:ui",
	"registryDependencies": [],
	"dependencies": ["motion"],
	"devDependencies": [],
	"tailwind": {},
	"cssVars": {
		"light": {},
		"dark": {}
	},
	"keywords": [
		"wifi",
		"connection",
		"network",
		"bars",
		"cellular",
		"reception",
		"coverage",
		"strength",
		"data",
		"internet",
		"wireless",
		"hotspot",
		"signal",
		"antenna",
		"tower"
	],
	"files": [
		{
			"path": "SignalIcon.tsx",
			"content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\n\nexport interface SignalHandle {\n\tstartAnimation: () => void;\n\tstopAnimation: () => void;\n}\n\ninterface SignalProps extends HTMLMotionProps<\"div\"> {\n\tsize?: number;\n\tspeed?: number;\n}\n\nconst SignalIcon = forwardRef<SignalHandle, SignalProps>(\n\t(\n\t\t{ onMouseEnter, onMouseLeave, className, size = 28, speed = 1, ...props },\n\t\tref,\n\t) => {\n\t\tconst controls = useAnimation();\n\t\tconst reduced = useReducedMotion();\n\t\tconst isControlled = useRef(false);\n\n\t\tuseImperativeHandle(ref, () => {\n\t\t\tisControlled.current = true;\n\t\t\treturn {\n\t\t\t\tstartAnimation: () =>\n\t\t\t\t\treduced ? controls.start(\"normal\") : controls.start(\"animate\"),\n\t\t\t\tstopAnimation: () => controls.start(\"normal\"),\n\t\t\t};\n\t\t});\n\n\t\tconst handleEnter = useCallback(() => {\n\t\t\tif (reduced) return;\n\t\t\tif (!isControlled.current) controls.start(\"animate\");\n\t\t}, [controls, reduced]);\n\n\t\tconst handleLeave = useCallback(() => {\n\t\t\tif (!isControlled.current) controls.start(\"normal\");\n\t\t}, [controls]);\n\n\t\tconst svgVariants: Variants = {\n\t\t\tnormal: { scale: 1, rotate: 0 },\n\t\t\tanimate: {\n\t\t\t\tscale: [1, 1.05, 1],\n\t\t\t\ttransition: { duration: 1 * speed, ease: \"easeInOut\" },\n\t\t\t},\n\t\t};\n\n\t\tconst dotVariants: Variants = {\n\t\t\tnormal: { scale: 1, opacity: 0.8 },\n\t\t\tanimate: {\n\t\t\t\tscale: [1, 1.3, 1],\n\t\t\t\topacity: [0.5, 1, 0.8],\n\t\t\t\ttransition: { duration: 0.5 * speed, ease: \"easeInOut\" },\n\t\t\t},\n\t\t};\n\n\t\tconst barPulse = (delay: number): Variants => ({\n\t\t\tnormal: { scaleY: 1, opacity: 0.9, transformOrigin: \"center bottom\" },\n\t\t\tanimate: {\n\t\t\t\tscaleY: [1, 1.4, 0.95, 1],\n\t\t\t\topacity: [0.8, 1, 0.85, 1],\n\t\t\t\ttransition: {\n\t\t\t\t\tduration: 0.8 * speed,\n\t\t\t\t\tease: \"easeInOut\",\n\t\t\t\t\tdelay,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\n\t\treturn (\n\t\t\t<motion.div\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\n\t\t\t\tonMouseEnter={handleEnter}\n\t\t\t\tonMouseLeave={handleLeave}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<motion.svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\twidth={size}\n\t\t\t\t\theight={size}\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\tanimate={controls}\n\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\tvariants={svgVariants}\n\t\t\t\t>\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"M2 20h.01\"\n\t\t\t\t\t\tvariants={dotVariants}\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tanimate={controls}\n\t\t\t\t\t/>\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"M7 20v-4\"\n\t\t\t\t\t\tvariants={barPulse(0.1)}\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tanimate={controls}\n\t\t\t\t\t/>\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"M12 20v-8\"\n\t\t\t\t\t\tvariants={barPulse(0.25)}\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tanimate={controls}\n\t\t\t\t\t/>\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"M17 20V8\"\n\t\t\t\t\t\tvariants={barPulse(0.4)}\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tanimate={controls}\n\t\t\t\t\t/>\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"M22 4v16\"\n\t\t\t\t\t\tvariants={barPulse(0.55)}\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tanimate={controls}\n\t\t\t\t\t/>\n\t\t\t\t</motion.svg>\n\t\t\t</motion.div>\n\t\t);\n\t},\n);\n\nSignalIcon.displayName = \"SignalIcon\";\nexport { SignalIcon };\n",
			"type": "registry:ui"
		}
	]
}
