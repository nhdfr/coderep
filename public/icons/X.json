{
	"name": "X",
	"type": "registry:ui",
	"registryDependencies": [],
	"dependencies": ["motion"],
	"devDependencies": [],
	"tailwind": {},
	"cssVars": {
		"light": {},
		"dark": {}
	},
	"keywords": [
		"cancel",
		"close",
		"delete",
		"remove",
		"clear",
		"multiply",
		"dismiss",
		"exit"
	],
	"files": [
		{
			"path": "XIcon.tsx",
			"content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\n\nexport interface XIconHandle {\n\tstartAnimation: () => void;\n\tstopAnimation: () => void;\n}\n\ninterface XIconProps extends HTMLMotionProps<\"div\"> {\n\tsize?: number;\n\tspeed?: number;\n}\n\nconst XIcon = forwardRef<XIconHandle, XIconProps>(\n\t(\n\t\t{ onMouseEnter, onMouseLeave, className, size = 24, speed = 1, ...props },\n\t\tref,\n\t) => {\n\t\tconst svgControls = useAnimation();\n\t\tconst path1Controls = useAnimation();\n\t\tconst path2Controls = useAnimation();\n\t\tconst reduced = useReducedMotion();\n\t\tconst isControlled = useRef(false);\n\n\t\tuseImperativeHandle(ref, () => {\n\t\t\tisControlled.current = true;\n\t\t\treturn {\n\t\t\t\tstartAnimation: () => {\n\t\t\t\t\tif (reduced) {\n\t\t\t\t\t\tsvgControls.start(\"normal\");\n\t\t\t\t\t\tpath1Controls.start(\"normal\");\n\t\t\t\t\t\tpath2Controls.start(\"normal\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsvgControls.start(\"animate\");\n\t\t\t\t\t\tpath1Controls.start(\"animate\");\n\t\t\t\t\t\tpath2Controls.start(\"animate\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstopAnimation: () => {\n\t\t\t\t\tsvgControls.start(\"normal\");\n\t\t\t\t\tpath1Controls.start(\"normal\");\n\t\t\t\t\tpath2Controls.start(\"normal\");\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\tconst handleEnter = useCallback(\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (reduced) return;\n\t\t\t\tif (!isControlled.current) {\n\t\t\t\t\tsvgControls.start(\"animate\");\n\t\t\t\t\tpath1Controls.start(\"animate\");\n\t\t\t\t\tpath2Controls.start(\"animate\");\n\t\t\t\t} else {\n\t\t\t\t\tonMouseEnter?.(e as any);\n\t\t\t\t}\n\t\t\t},\n\t\t\t[svgControls, path1Controls, path2Controls, reduced, onMouseEnter],\n\t\t);\n\n\t\tconst handleLeave = useCallback(\n\t\t\t(e: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (!isControlled.current) {\n\t\t\t\t\tsvgControls.start(\"normal\");\n\t\t\t\t\tpath1Controls.start(\"normal\");\n\t\t\t\t\tpath2Controls.start(\"normal\");\n\t\t\t\t} else {\n\t\t\t\t\tonMouseLeave?.(e);\n\t\t\t\t}\n\t\t\t},\n\t\t\t[svgControls, path1Controls, path2Controls, onMouseLeave],\n\t\t);\n\n\t\tconst svgVariants: Variants = {\n\t\t\tnormal: {\n\t\t\t\trotate: 0,\n\t\t\t\tscale: 1,\n\t\t\t\ttransition: { duration: 0.3 * speed },\n\t\t\t},\n\t\t\tanimate: {\n\t\t\t\trotate: [0, 15, -15, 0],\n\t\t\t\tscale: [1, 1.1, 1],\n\t\t\t\ttransition: { duration: 0.6 * speed },\n\t\t\t},\n\t\t};\n\n\t\tconst pathVariants: Variants = {\n\t\t\tnormal: { pathLength: 1, opacity: 1 },\n\t\t\tanimate: {\n\t\t\t\tpathLength: [0, 1],\n\t\t\t\topacity: [0, 1],\n\t\t\t\ttransition: { duration: 0.6 * speed, ease: \"easeInOut\" },\n\t\t\t},\n\t\t};\n\n\t\treturn (\n\t\t\t<motion.div\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\n\t\t\t\tonMouseEnter={handleEnter}\n\t\t\t\tonMouseLeave={handleLeave}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<motion.svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\twidth={size}\n\t\t\t\t\theight={size}\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\tvariants={svgVariants}\n\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\tanimate={svgControls}\n\t\t\t\t>\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"M18 6 6 18\"\n\t\t\t\t\t\tvariants={pathVariants}\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tanimate={path1Controls}\n\t\t\t\t\t/>\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"m6 6 12 12\"\n\t\t\t\t\t\tvariants={pathVariants}\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tanimate={path2Controls}\n\t\t\t\t\t\ttransition={{ delay: 0.2 }}\n\t\t\t\t\t/>\n\t\t\t\t</motion.svg>\n\t\t\t</motion.div>\n\t\t);\n\t},\n);\n\nXIcon.displayName = \"XIcon\";\nexport { XIcon };\n",
			"type": "registry:ui"
		}
	]
}
