{
	"name": "trash-2",
	"type": "registry:ui",
	"registryDependencies": [],
	"dependencies": ["motion"],
	"devDependencies": [],
	"tailwind": {},
	"cssVars": {
		"light": {},
		"dark": {}
	},
	"keywords": [
		"empty",
		"deletion",
		"cleanup",
		"junk",
		"clear",
		"garbage",
		"delete",
		"remove",
		"bin",
		"waste",
		"discard"
	],
	"files": [
		{
			"path": "Trash2Icon.tsx",
			"content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\n\nexport interface Trash2IconHandle {\n\tstartAnimation: () => void;\n\tstopAnimation: () => void;\n}\n\ninterface Trash2IconProps extends HTMLMotionProps<\"div\"> {\n\tsize?: number;\n\tspeed?: number;\n}\n\nconst Trash2Icon = forwardRef<Trash2IconHandle, Trash2IconProps>(\n\t(\n\t\t{ onMouseEnter, onMouseLeave, className, size = 28, speed = 1, ...props },\n\t\tref,\n\t) => {\n\t\tconst binControls = useAnimation();\n\t\tconst lidControls = useAnimation();\n\t\tconst barControls = useAnimation();\n\t\tconst reduced = useReducedMotion();\n\t\tconst isControlled = useRef(false);\n\n\t\tuseImperativeHandle(ref, () => {\n\t\t\tisControlled.current = true;\n\t\t\treturn {\n\t\t\t\tstartAnimation: () => {\n\t\t\t\t\tif (reduced) {\n\t\t\t\t\t\tbinControls.start(\"normal\");\n\t\t\t\t\t\tlidControls.start(\"normal\");\n\t\t\t\t\t\tbarControls.start(\"normal\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbinControls.start(\"animate\");\n\t\t\t\t\t\tlidControls.start(\"animate\");\n\t\t\t\t\t\tbarControls.start(\"animate\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstopAnimation: () => {\n\t\t\t\t\tbinControls.start(\"normal\");\n\t\t\t\t\tlidControls.start(\"normal\");\n\t\t\t\t\tbarControls.start(\"normal\");\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\tconst handleEnter = useCallback(\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (reduced) return;\n\t\t\t\tif (!isControlled.current) {\n\t\t\t\t\tbinControls.start(\"animate\");\n\t\t\t\t\tlidControls.start(\"animate\");\n\t\t\t\t\tbarControls.start(\"animate\");\n\t\t\t\t} else {\n\t\t\t\t\tonMouseEnter?.(e as any);\n\t\t\t\t}\n\t\t\t},\n\t\t\t[binControls, lidControls, barControls, reduced, onMouseEnter],\n\t\t);\n\n\t\tconst handleLeave = useCallback(\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (!isControlled.current) {\n\t\t\t\t\tbinControls.start(\"normal\");\n\t\t\t\t\tlidControls.start(\"normal\");\n\t\t\t\t\tbarControls.start(\"normal\");\n\t\t\t\t} else {\n\t\t\t\t\tonMouseLeave?.(e as any);\n\t\t\t\t}\n\t\t\t},\n\t\t\t[binControls, lidControls, barControls, onMouseLeave],\n\t\t);\n\n\t\tconst binVariants: Variants = {\n\t\t\tnormal: { scale: 1, rotate: 0, y: 0 },\n\t\t\tanimate: {\n\t\t\t\tscale: [1, 1.05, 0.97, 1],\n\t\t\t\trotate: [0, -2, 2, 0],\n\t\t\t\ty: [0, -1.5, 0],\n\t\t\t\ttransition: { duration: 0.8 * speed, ease: \"easeInOut\" },\n\t\t\t},\n\t\t};\n\n\t\tconst lidVariants: Variants = {\n\t\t\tnormal: { rotate: 0, y: 0, transformOrigin: \"12px 4px\" },\n\t\t\tanimate: {\n\t\t\t\trotate: [-15, 5, 0],\n\t\t\t\ty: [-2, 0],\n\t\t\t\ttransition: { duration: 0.7 * speed, ease: \"easeOut\", delay: 0.1 },\n\t\t\t},\n\t\t};\n\n\t\tconst barVariants: Variants = {\n\t\t\tnormal: { scaleY: 1, opacity: 1, transformOrigin: \"center bottom\" },\n\t\t\tanimate: {\n\t\t\t\tscaleY: [1, 1.2, 1],\n\t\t\t\topacity: [1, 0.9, 1],\n\t\t\t\ttransition: { duration: 0.6 * speed, ease: \"easeInOut\", delay: 0.2 },\n\t\t\t},\n\t\t};\n\n\t\treturn (\n\t\t\t<motion.div\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\n\t\t\t\tonMouseEnter={handleEnter}\n\t\t\t\tonMouseLeave={handleLeave}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<motion.svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\twidth={size}\n\t\t\t\t\theight={size}\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"M10 11v6\"\n\t\t\t\t\t\tanimate={barControls}\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tvariants={barVariants}\n\t\t\t\t\t/>\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"M14 11v6\"\n\t\t\t\t\t\tanimate={barControls}\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tvariants={barVariants}\n\t\t\t\t\t/>\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6\"\n\t\t\t\t\t\tanimate={binControls}\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tvariants={binVariants}\n\t\t\t\t\t/>\n\t\t\t\t\t<motion.path d=\"M3 6h18\" stroke=\"currentColor\" />\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"M8 6V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"\n\t\t\t\t\t\tanimate={lidControls}\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tvariants={lidVariants}\n\t\t\t\t\t/>\n\t\t\t\t</motion.svg>\n\t\t\t</motion.div>\n\t\t);\n\t},\n);\n\nTrash2Icon.displayName = \"Trash2Icon\";\nexport { Trash2Icon };\n",
			"type": "registry:ui"
		}
	]
}
