{
	"name": "badge-dollar",
	"type": "registry:ui",
	"registryDependencies": [],
	"dependencies": ["motion"],
	"devDependencies": [],
	"tailwind": {},
	"cssVars": {
		"light": {},
		"dark": {}
	},
	"keywords": [
		"discount",
		"offer",
		"sale",
		"voucher",
		"tag",
		"monetization",
		"marketing",
		"finance",
		"financial",
		"exchange",
		"transaction",
		"payment",
		"usd",
		"$"
	],
	"files": [
		{
			"path": "BadgeDollarIcon.tsx",
			"content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\n\nexport interface BadgeDollarIconHandle {\n\tstartAnimation: () => void;\n\tstopAnimation: () => void;\n}\n\ninterface BadgeDollarIconProps extends HTMLMotionProps<\"div\"> {\n\tsize?: number;\n\tspeed?: number;\n}\n\nconst BadgeDollarIcon = forwardRef<BadgeDollarIconHandle, BadgeDollarIconProps>(\n\t(\n\t\t{ onMouseEnter, onMouseLeave, className, size = 28, speed = 1, ...props },\n\t\tref,\n\t) => {\n\t\tconst outerControls = useAnimation();\n\t\tconst dollarControls = useAnimation();\n\t\tconst lineControls = useAnimation();\n\t\tconst reduced = useReducedMotion();\n\t\tconst isControlled = useRef(false);\n\n\t\tuseImperativeHandle(ref, () => {\n\t\t\tisControlled.current = true;\n\t\t\treturn {\n\t\t\t\tstartAnimation: () => {\n\t\t\t\t\tif (reduced) {\n\t\t\t\t\t\touterControls.start(\"normal\");\n\t\t\t\t\t\tdollarControls.start(\"normal\");\n\t\t\t\t\t\tlineControls.start(\"normal\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\touterControls.start(\"animate\");\n\t\t\t\t\t\tdollarControls.start(\"animate\");\n\t\t\t\t\t\tlineControls.start(\"animate\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstopAnimation: () => {\n\t\t\t\t\touterControls.start(\"normal\");\n\t\t\t\t\tdollarControls.start(\"normal\");\n\t\t\t\t\tlineControls.start(\"normal\");\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\tconst handleEnter = useCallback(\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (reduced) return;\n\t\t\t\tif (!isControlled.current) {\n\t\t\t\t\touterControls.start(\"animate\");\n\t\t\t\t\tdollarControls.start(\"animate\");\n\t\t\t\t\tlineControls.start(\"animate\");\n\t\t\t\t} else onMouseEnter?.(e as any);\n\t\t\t},\n\t\t\t[outerControls, dollarControls, lineControls, reduced, onMouseEnter],\n\t\t);\n\n\t\tconst handleLeave = useCallback(\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (!isControlled.current) {\n\t\t\t\t\touterControls.start(\"normal\");\n\t\t\t\t\tdollarControls.start(\"normal\");\n\t\t\t\t\tlineControls.start(\"normal\");\n\t\t\t\t} else onMouseLeave?.(e as any);\n\t\t\t},\n\t\t\t[outerControls, dollarControls, lineControls, onMouseLeave],\n\t\t);\n\n\t\tconst outerVariants: Variants = {\n\t\t\tnormal: { strokeDashoffset: 0, scale: 1 },\n\t\t\tanimate: {\n\t\t\t\tstrokeDashoffset: [260, 20, 0],\n\t\t\t\tscale: [1, 0.98, 1.03, 1],\n\t\t\t\ttransition: {\n\t\t\t\t\tduration: 1.2 * speed,\n\t\t\t\t\tease: [0.2, 0.85, 0.25, 1],\n\t\t\t\t\ttimes: [0, 0.35, 0.7, 1],\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\tconst dollarVariants: Variants = {\n\t\t\tnormal: { strokeDashoffset: 0, scale: 1 },\n\t\t\tanimate: {\n\t\t\t\tstrokeDashoffset: [140, 0],\n\t\t\t\tscale: [1, 1.06, 0.98, 1],\n\t\t\t\ttransition: {\n\t\t\t\t\tduration: 0.9 * speed,\n\t\t\t\t\tease: [0.22, 0.9, 0.28, 1],\n\t\t\t\t\tdelay: 0.32,\n\t\t\t\t\ttimes: [0, 0.45, 0.8, 1],\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\tconst lineVariants: Variants = {\n\t\t\tnormal: { strokeDashoffset: 0, scaleY: 1, opacity: 1 },\n\t\t\tanimate: {\n\t\t\t\tstrokeDashoffset: [16, 0],\n\t\t\t\tscaleY: [1, 1.16, 0.98, 1],\n\t\t\t\topacity: [0.9, 1, 1],\n\t\t\t\ttransition: {\n\t\t\t\t\tduration: 0.8 * speed,\n\t\t\t\t\tease: [0.22, 0.9, 0.28, 1],\n\t\t\t\t\tdelay: 0.18,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\treturn (\n\t\t\t<motion.div\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\n\t\t\t\tonMouseEnter={handleEnter}\n\t\t\t\tonMouseLeave={handleLeave}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\twidth={size}\n\t\t\t\t\theight={size}\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z\"\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tanimate={outerControls}\n\t\t\t\t\t\tvariants={outerVariants}\n\t\t\t\t\t\tstyle={{ strokeDasharray: 260, transformOrigin: \"12px 12px\" }}\n\t\t\t\t\t/>\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8\"\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tanimate={dollarControls}\n\t\t\t\t\t\tvariants={dollarVariants}\n\t\t\t\t\t\tstyle={{ strokeDasharray: 140, strokeLinecap: \"round\" }}\n\t\t\t\t\t/>\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"M12 18V6\"\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tanimate={lineControls}\n\t\t\t\t\t\tvariants={lineVariants}\n\t\t\t\t\t\tstyle={{ strokeDasharray: 20, strokeLinecap: \"round\" }}\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\t\t\t</motion.div>\n\t\t);\n\t},\n);\n\nBadgeDollarIcon.displayName = \"BadgeDollarIcon\";\nexport { BadgeDollarIcon };\n",
			"type": "registry:ui"
		}
	]
}
