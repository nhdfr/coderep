{
	"name": "map-pinned",
	"type": "registry:ui",
	"registryDependencies": [],
	"dependencies": ["motion"],
	"devDependencies": [],
	"tailwind": {},
	"cssVars": {
		"light": {},
		"dark": {}
	},
	"keywords": [
		"location",
		"place",
		"marker",
		"gps",
		"navigation",
		"destination",
		"map",
		"position",
		"address",
		"coordinates",
		"travel",
		"trip",
		"journey",
		"waypoint",
		"geolocation",
		"pin"
	],
	"files": [
		{
			"path": "MapPinnedIcon.tsx",
			"content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\n\nexport interface MapPinnedIconHandle {\n\tstartAnimation: () => void;\n\tstopAnimation: () => void;\n}\n\ninterface MapPinnedIconProps extends HTMLMotionProps<\"div\"> {\n\tsize?: number;\n\tspeed?: number;\n}\n\nconst MapPinnedIcon = forwardRef<MapPinnedIconHandle, MapPinnedIconProps>(\n\t(\n\t\t{ onMouseEnter, onMouseLeave, className, size = 28, speed = 1, ...props },\n\t\tref,\n\t) => {\n\t\tconst pinControls = useAnimation();\n\t\tconst circleControls = useAnimation();\n\t\tconst trayControls = useAnimation();\n\t\tconst reduced = useReducedMotion();\n\t\tconst isControlled = useRef(false);\n\n\t\tuseImperativeHandle(ref, () => {\n\t\t\tisControlled.current = true;\n\t\t\treturn {\n\t\t\t\tstartAnimation: () => {\n\t\t\t\t\tif (reduced) {\n\t\t\t\t\t\tpinControls.start(\"normal\");\n\t\t\t\t\t\tcircleControls.start(\"normal\");\n\t\t\t\t\t\ttrayControls.start(\"normal\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpinControls.start(\"animate\");\n\t\t\t\t\t\tcircleControls.start(\"animate\");\n\t\t\t\t\t\ttrayControls.start(\"animate\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstopAnimation: () => {\n\t\t\t\t\tpinControls.start(\"normal\");\n\t\t\t\t\tcircleControls.start(\"normal\");\n\t\t\t\t\ttrayControls.start(\"normal\");\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\tconst handleEnter = useCallback(\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (reduced) return;\n\t\t\t\tif (!isControlled.current) {\n\t\t\t\t\tpinControls.start(\"animate\");\n\t\t\t\t\tcircleControls.start(\"animate\");\n\t\t\t\t\ttrayControls.start(\"animate\");\n\t\t\t\t} else onMouseEnter?.(e as any);\n\t\t\t},\n\t\t\t[pinControls, circleControls, trayControls, reduced, onMouseEnter],\n\t\t);\n\n\t\tconst handleLeave = useCallback(\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (!isControlled.current) {\n\t\t\t\t\tpinControls.start(\"normal\");\n\t\t\t\t\tcircleControls.start(\"normal\");\n\t\t\t\t\ttrayControls.start(\"normal\");\n\t\t\t\t} else onMouseLeave?.(e as any);\n\t\t\t},\n\t\t\t[pinControls, circleControls, trayControls, onMouseLeave],\n\t\t);\n\n\t\tconst pinVariants: Variants = {\n\t\t\tnormal: { strokeDashoffset: 0 },\n\t\t\tanimate: {\n\t\t\t\tstrokeDashoffset: [180, 0],\n\t\t\t\ttransition: { duration: 1.6 * speed, ease: \"easeOut\" },\n\t\t\t},\n\t\t};\n\n\t\tconst circleVariants: Variants = {\n\t\t\tnormal: { scale: 1, opacity: 1 },\n\t\t\tanimate: {\n\t\t\t\tscale: [1, 1.18, 1],\n\t\t\t\topacity: [1, 0.8, 1],\n\t\t\t\ttransition: { duration: 0.9 * speed, ease: \"easeOut\", delay: 0.8 },\n\t\t\t},\n\t\t};\n\n\t\tconst trayVariants: Variants = {\n\t\t\tnormal: { y: 0, strokeDashoffset: 0, opacity: 1 },\n\t\t\tanimate: {\n\t\t\t\ty: [-4, 0],\n\t\t\t\tstrokeDashoffset: [80, 0],\n\t\t\t\topacity: [0, 1],\n\t\t\t\ttransition: { duration: 0.8 * speed, ease: \"easeOut\", delay: 0.12 },\n\t\t\t},\n\t\t};\n\n\t\treturn (\n\t\t\t<motion.div\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\n\t\t\t\tonMouseEnter={handleEnter}\n\t\t\t\tonMouseLeave={handleLeave}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\twidth={size}\n\t\t\t\t\theight={size}\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"M18 8c0 3.613-3.869 7.429-5.393 8.795a1 1 0 0 1-1.214 0C9.87 15.429 6 11.613 6 8a6 6 0 0 1 12 0\"\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tanimate={pinControls}\n\t\t\t\t\t\tvariants={pinVariants}\n\t\t\t\t\t\tstyle={{ strokeDasharray: 180, strokeLinecap: \"round\" }}\n\t\t\t\t\t/>\n\t\t\t\t\t<motion.circle\n\t\t\t\t\t\tcx=\"12\"\n\t\t\t\t\t\tcy=\"8\"\n\t\t\t\t\t\tr=\"2\"\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tanimate={circleControls}\n\t\t\t\t\t\tvariants={circleVariants}\n\t\t\t\t\t/>\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"M8.714 14h-3.71a1 1 0 0 0-.948.683l-2.004 6A1 1 0 0 0 3 22h18a1 1 0 0 0 .948-1.316l-2-6a1 1 0 0 0-.949-.684h-3.712\"\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tanimate={trayControls}\n\t\t\t\t\t\tvariants={trayVariants}\n\t\t\t\t\t\tstyle={{ strokeDasharray: 80, strokeLinecap: \"round\" }}\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\t\t\t</motion.div>\n\t\t);\n\t},\n);\n\nMapPinnedIcon.displayName = \"MapPinnedIcon\";\nexport { MapPinnedIcon };\n",
			"type": "registry:ui"
		}
	]
}
