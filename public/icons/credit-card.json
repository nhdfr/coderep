{
	"name": "credit-card",
	"type": "registry:ui",
	"registryDependencies": [],
	"dependencies": ["motion"],
	"devDependencies": [],
	"tailwind": {},
	"cssVars": {
		"light": {},
		"dark": {}
	},
	"keywords": [
		"payment",
		"card",
		"debit",
		"credit",
		"money",
		"finance",
		"visa",
		"mastercard",
		"amex",
		"stripe",
		"paypal"
	],
	"files": [
		{
			"path": "CreditCardIcon.tsx",
			"content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\n\nexport interface CardHandle {\n\tstartAnimation: () => void;\n\tstopAnimation: () => void;\n}\n\ninterface CardProps extends HTMLMotionProps<\"div\"> {\n\tsize?: number;\n\tspeed?: number;\n}\n\nconst CreditCardIcon = forwardRef<CardHandle, CardProps>(\n\t(\n\t\t{ onMouseEnter, onMouseLeave, className, size = 28, speed = 1, ...props },\n\t\tref,\n\t) => {\n\t\tconst controls = useAnimation();\n\t\tconst stripeControls = useAnimation();\n\t\tconst swipeControls = useAnimation();\n\t\tconst reduced = useReducedMotion();\n\t\tconst isControlled = useRef(false);\n\n\t\tuseImperativeHandle(ref, () => {\n\t\t\tisControlled.current = true;\n\t\t\treturn {\n\t\t\t\tstartAnimation: () => {\n\t\t\t\t\tif (reduced) {\n\t\t\t\t\t\tcontrols.start(\"normal\");\n\t\t\t\t\t\tstripeControls.start(\"normal\");\n\t\t\t\t\t\tswipeControls.start(\"normal\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontrols.start(\"animate\");\n\t\t\t\t\t\tstripeControls.start(\"animate\");\n\t\t\t\t\t\tswipeControls.start(\"animate\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstopAnimation: () => {\n\t\t\t\t\tcontrols.start(\"normal\");\n\t\t\t\t\tstripeControls.start(\"normal\");\n\t\t\t\t\tswipeControls.start(\"normal\");\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\tconst handleEnter = useCallback(\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (reduced) return;\n\t\t\t\tif (!isControlled.current) {\n\t\t\t\t\tcontrols.start(\"animate\");\n\t\t\t\t\tstripeControls.start(\"animate\");\n\t\t\t\t\tswipeControls.start(\"animate\");\n\t\t\t\t} else onMouseLeave?.(e as any);\n\t\t\t},\n\t\t\t[controls, stripeControls, swipeControls],\n\t\t);\n\n\t\tconst handleLeave = useCallback(\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (!isControlled.current) {\n\t\t\t\t\tcontrols.start(\"normal\");\n\t\t\t\t\tstripeControls.start(\"normal\");\n\t\t\t\t\tswipeControls.start(\"normal\");\n\t\t\t\t} else onMouseLeave?.(e as any);\n\t\t\t},\n\t\t\t[controls, stripeControls, swipeControls],\n\t\t);\n\n\t\tconst cardTilt: Variants = {\n\t\t\tnormal: { rotate: 0, scale: 1, x: 0, y: 0 },\n\t\t\tanimate: {\n\t\t\t\trotate: [0, -4, 2, 0],\n\t\t\t\tscale: [1, 1.02, 1],\n\t\t\t\tx: [0, -0.4, 0],\n\t\t\t\ty: [0, -0.3, 0],\n\t\t\t\ttransition: { duration: 0.6 * speed, ease: \"easeInOut\" },\n\t\t\t},\n\t\t};\n\n\t\tconst stripeSlide: Variants = {\n\t\t\tnormal: { x: 0, opacity: 1 },\n\t\t\tanimate: {\n\t\t\t\tx: [-2, 0],\n\t\t\t\topacity: [0.7, 1],\n\t\t\t\ttransition: {\n\t\t\t\t\tduration: 0.4 * speed,\n\t\t\t\t\tease: \"easeOut\",\n\t\t\t\t\tdelay: 0.08,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\tconst swipeLine: Variants = {\n\t\t\tnormal: { pathLength: 0, opacity: 0 },\n\t\t\tanimate: {\n\t\t\t\tpathLength: [0, 1],\n\t\t\t\topacity: [0, 1, 0.9],\n\t\t\t\ttransition: {\n\t\t\t\t\tduration: 0.5 * speed,\n\t\t\t\t\tease: \"easeInOut\",\n\t\t\t\t\tdelay: 0.18,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\tconst embossPulse: Variants = {\n\t\t\tnormal: { scale: 1 },\n\t\t\tanimate: {\n\t\t\t\tscale: [1, 1.035, 1],\n\t\t\t\ttransition: {\n\t\t\t\t\tduration: 0.28 * speed,\n\t\t\t\t\tease: \"easeOut\",\n\t\t\t\t\tdelay: 0.3,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\treturn (\n\t\t\t<motion.div\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\n\t\t\t\tonMouseEnter={handleEnter}\n\t\t\t\tonMouseLeave={handleLeave}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<motion.svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\twidth={size}\n\t\t\t\t\theight={size}\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\tclassName=\"lucide lucide-credit-card-icon lucide-credit-card\"\n\t\t\t\t>\n\t\t\t\t\t<motion.g variants={cardTilt} initial=\"normal\" animate={controls}>\n\t\t\t\t\t\t<motion.rect\n\t\t\t\t\t\t\twidth=\"20\"\n\t\t\t\t\t\t\theight=\"14\"\n\t\t\t\t\t\t\tx=\"2\"\n\t\t\t\t\t\t\ty=\"5\"\n\t\t\t\t\t\t\trx=\"2\"\n\t\t\t\t\t\t\tvariants={embossPulse}\n\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\tanimate={controls}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<motion.line\n\t\t\t\t\t\t\tx1=\"2\"\n\t\t\t\t\t\t\tx2=\"22\"\n\t\t\t\t\t\t\ty1=\"10\"\n\t\t\t\t\t\t\ty2=\"10\"\n\t\t\t\t\t\t\tvariants={stripeSlide}\n\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\tanimate={stripeControls}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<motion.path\n\t\t\t\t\t\t\td=\"M5 15 H15\"\n\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\tstrokeWidth=\"1.5\"\n\t\t\t\t\t\t\tvariants={swipeLine}\n\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\tanimate={swipeControls}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</motion.g>\n\t\t\t\t</motion.svg>\n\t\t\t</motion.div>\n\t\t);\n\t},\n);\n\nCreditCardIcon.displayName = \"CreditCardIcon\";\nexport { CreditCardIcon };\n",
			"type": "registry:ui"
		}
	]
}
