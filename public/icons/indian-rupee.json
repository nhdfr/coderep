{
	"name": "indian-rupee",
	"type": "registry:ui",
	"registryDependencies": [],
	"dependencies": ["motion"],
	"devDependencies": [],
	"tailwind": {},
	"cssVars": {
		"light": {},
		"dark": {}
	},
	"keywords": [
		"currency",
		"money",
		"finance",
		"payment",
		"rupee",
		"india",
		"â‚¹"
	],
	"files": [
		{
			"path": "IndianRupeeIcon.tsx",
			"content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\n\nexport interface IndianRupeeHandle {\n\tstartAnimation: () => void;\n\tstopAnimation: () => void;\n}\n\ninterface IndianRupeeProps extends HTMLMotionProps<\"div\"> {\n\tsize?: number;\n\tspeed?: number;\n}\n\nconst IndianRupeeIcon = forwardRef<IndianRupeeHandle, IndianRupeeProps>(\n\t(\n\t\t{ onMouseEnter, onMouseLeave, className, size = 28, speed = 1, ...props },\n\t\tref,\n\t) => {\n\t\tconst controls = useAnimation();\n\t\tconst reduced = useReducedMotion();\n\t\tconst isControlled = useRef(false);\n\n\t\tuseImperativeHandle(ref, () => {\n\t\t\tisControlled.current = true;\n\t\t\treturn {\n\t\t\t\tstartAnimation: () =>\n\t\t\t\t\treduced ? controls.start(\"normal\") : controls.start(\"animate\"),\n\t\t\t\tstopAnimation: () => controls.start(\"normal\"),\n\t\t\t};\n\t\t});\n\n\t\tconst handleEnter = useCallback(\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (reduced) return;\n\t\t\t\tif (!isControlled.current) controls.start(\"animate\");\n\t\t\t\telse onMouseEnter?.(e as any);\n\t\t\t},\n\t\t\t[controls, reduced, onMouseEnter],\n\t\t);\n\n\t\tconst handleLeave = useCallback(\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (!isControlled.current) controls.start(\"normal\");\n\t\t\t\telse onMouseLeave?.(e as any);\n\t\t\t},\n\t\t\t[controls, onMouseLeave],\n\t\t);\n\n\t\tconst ease = [0.12, 1, 0.25, 1] as const;\n\n\t\tconst drawTop: Variants = {\n\t\t\tnormal: { strokeDasharray: \"1\", strokeDashoffset: 0 },\n\t\t\tanimate: {\n\t\t\t\tstrokeDasharray: \"1\",\n\t\t\t\tstrokeDashoffset: [1, 0],\n\t\t\t\ttransition: { duration: 0.5 * speed, ease, delay: 0.06 },\n\t\t\t},\n\t\t};\n\n\t\tconst drawMid: Variants = {\n\t\t\tnormal: { strokeDasharray: \"1\", strokeDashoffset: 0 },\n\t\t\tanimate: {\n\t\t\t\tstrokeDasharray: \"1\",\n\t\t\t\tstrokeDashoffset: [1, 0],\n\t\t\t\ttransition: {\n\t\t\t\t\tduration: 0.5 * speed,\n\t\t\t\t\tease: \"easeInOut\",\n\t\t\t\t\tdelay: 0.16,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\tconst drawCurve: Variants = {\n\t\t\tnormal: { strokeDasharray: \"1\", strokeDashoffset: 0 },\n\t\t\tanimate: {\n\t\t\t\tstrokeDasharray: \"1\",\n\t\t\t\tstrokeDashoffset: [1, 0],\n\t\t\t\ttransition: {\n\t\t\t\t\tduration: 0.8 * speed,\n\t\t\t\t\tease: \"easeInOut\",\n\t\t\t\t\tdelay: 0.26,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\tconst drawNotch: Variants = {\n\t\t\tnormal: { strokeDasharray: \"1\", strokeDashoffset: 0 },\n\t\t\tanimate: {\n\t\t\t\tstrokeDasharray: \"1\",\n\t\t\t\tstrokeDashoffset: [1, 0],\n\t\t\t\ttransition: {\n\t\t\t\t\tduration: 0.45 * speed,\n\t\t\t\t\tease: \"easeInOut\",\n\t\t\t\t\tdelay: 0.42,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\tconst groupSettle: Variants = {\n\t\t\tnormal: { scale: 1, x: 0, y: 0 },\n\t\t\tanimate: {\n\t\t\t\tscale: [1, 1.05, 1],\n\t\t\t\tx: [0, -1, 0],\n\t\t\t\ty: [0, -1, 0],\n\t\t\t\ttransition: { duration: 0.6 * speed, ease },\n\t\t\t},\n\t\t};\n\n\t\tconst diagonalResolve: Variants = {\n\t\t\tnormal: {\n\t\t\t\tstrokeDasharray: \"1\",\n\t\t\t\tstrokeDashoffset: 0,\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\topacity: 1,\n\t\t\t\tscale: 1,\n\t\t\t},\n\t\t\tanimate: {\n\t\t\t\tstrokeDasharray: \"1\",\n\t\t\t\tstrokeDashoffset: [1, 0],\n\t\t\t\tx: [-0.3, 0.5, 0],\n\t\t\t\ty: [-0.2, 0.5, 0],\n\t\t\t\tscale: [1, 1.05, 1],\n\t\t\t\topacity: [1, 1],\n\t\t\t\ttransition: { duration: 0.6 * speed, ease, delay: 0.5 },\n\t\t\t},\n\t\t};\n\n\t\treturn (\n\t\t\t<motion.div\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\n\t\t\t\tonMouseEnter={handleEnter}\n\t\t\t\tonMouseLeave={handleLeave}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<motion.svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\twidth={size}\n\t\t\t\t\theight={size}\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\tclassName=\"lucide lucide-indian-rupee-icon lucide-indian-rupee\"\n\t\t\t\t>\n\t\t\t\t\t<motion.g variants={groupSettle} initial=\"normal\" animate={controls}>\n\t\t\t\t\t\t<g opacity={0.3}>\n\t\t\t\t\t\t\t<path d=\"M6 3h12\" />\n\t\t\t\t\t\t\t<path d=\"M6 8h12\" />\n\t\t\t\t\t\t\t<path d=\"M9 13c6.667 0 6.667-10 0-10\" />\n\t\t\t\t\t\t\t<path d=\"M6 13h3\" />\n\t\t\t\t\t\t\t<path d=\"m6 13 8.5 8\" />\n\t\t\t\t\t\t</g>\n\n\t\t\t\t\t\t<motion.path\n\t\t\t\t\t\t\td=\"M6 3h12\"\n\t\t\t\t\t\t\tpathLength={1}\n\t\t\t\t\t\t\tvariants={drawTop}\n\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\tanimate={controls}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<motion.path\n\t\t\t\t\t\t\td=\"M6 8h12\"\n\t\t\t\t\t\t\tpathLength={1}\n\t\t\t\t\t\t\tvariants={drawMid}\n\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\tanimate={controls}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<motion.path\n\t\t\t\t\t\t\td=\"M9 13c6.667 0 6.667-10 0-10\"\n\t\t\t\t\t\t\tpathLength={1}\n\t\t\t\t\t\t\tvariants={drawCurve}\n\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\tanimate={controls}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<motion.path\n\t\t\t\t\t\t\td=\"M6 13h3\"\n\t\t\t\t\t\t\tpathLength={1}\n\t\t\t\t\t\t\tvariants={drawNotch}\n\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\tanimate={controls}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<motion.path\n\t\t\t\t\t\t\td=\"m6 13 8.5 8\"\n\t\t\t\t\t\t\tpathLength={1}\n\t\t\t\t\t\t\tvariants={diagonalResolve}\n\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\tanimate={controls}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</motion.g>\n\t\t\t\t</motion.svg>\n\t\t\t</motion.div>\n\t\t);\n\t},\n);\n\nIndianRupeeIcon.displayName = \"IndianRupeeIcon\";\nexport { IndianRupeeIcon };\n",
			"type": "registry:ui"
		}
	]
}
