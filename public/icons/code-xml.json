{
	"name": "code-xml",
	"type": "registry:ui",
	"registryDependencies": [],
	"dependencies": ["motion"],
	"devDependencies": [],
	"tailwind": {},
	"cssVars": {
		"light": {},
		"dark": {}
	},
	"keywords": ["source", "programming", "html", "xml"],
	"files": [
		{
			"path": "CodeXmlIcon.tsx",
			"content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\n\nexport interface CodeXmlIconHandle {\n\tstartAnimation: () => void;\n\tstopAnimation: () => void;\n}\n\ninterface CodeXmlIconProps extends HTMLMotionProps<\"div\"> {\n\tsize?: number;\n\tspeed?: number;\n}\n\nconst CodeXmlIcon = forwardRef<CodeXmlIconHandle, CodeXmlIconProps>(\n\t(\n\t\t{ onMouseEnter, onMouseLeave, className, size = 28, speed = 1, ...props },\n\t\tref,\n\t) => {\n\t\tconst leftControls = useAnimation();\n\t\tconst rightControls = useAnimation();\n\t\tconst slashControls = useAnimation();\n\t\tconst isControlled = useRef(false);\n\t\tconst reduced = useReducedMotion();\n\n\t\tuseImperativeHandle(ref, () => {\n\t\t\tisControlled.current = true;\n\t\t\treturn {\n\t\t\t\tstartAnimation: () => {\n\t\t\t\t\tif (reduced) {\n\t\t\t\t\t\tleftControls.start(\"normal\");\n\t\t\t\t\t\trightControls.start(\"normal\");\n\t\t\t\t\t\tslashControls.start(\"normal\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tleftControls.start(\"animate\");\n\t\t\t\t\t\trightControls.start(\"animate\");\n\t\t\t\t\t\tslashControls.start(\"animate\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstopAnimation: () => {\n\t\t\t\t\tleftControls.start(\"normal\");\n\t\t\t\t\trightControls.start(\"normal\");\n\t\t\t\t\tslashControls.start(\"normal\");\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\tconst handleEnter = useCallback(\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (reduced) return;\n\t\t\t\tif (!isControlled.current) {\n\t\t\t\t\tleftControls.start(\"animate\");\n\t\t\t\t\trightControls.start(\"animate\");\n\t\t\t\t\tslashControls.start(\"animate\");\n\t\t\t\t} else {\n\t\t\t\t\tonMouseEnter?.(e as any);\n\t\t\t\t}\n\t\t\t},\n\t\t\t[leftControls, rightControls, slashControls, reduced, onMouseEnter],\n\t\t);\n\n\t\tconst handleLeave = useCallback(\n\t\t\t(e: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (!isControlled.current) {\n\t\t\t\t\tleftControls.start(\"normal\");\n\t\t\t\t\trightControls.start(\"normal\");\n\t\t\t\t\tslashControls.start(\"normal\");\n\t\t\t\t} else {\n\t\t\t\t\tonMouseLeave?.(e as any);\n\t\t\t\t}\n\t\t\t},\n\t\t\t[leftControls, rightControls, slashControls, onMouseLeave],\n\t\t);\n\n\t\tconst leftArrowVariants: Variants = {\n\t\t\tnormal: { pathLength: 1, opacity: 1 },\n\t\t\tanimate: {\n\t\t\t\tpathLength: [0, 1],\n\t\t\t\topacity: [0.6, 1],\n\t\t\t\ttransition: { duration: 0.7 * speed, ease: \"easeInOut\" },\n\t\t\t},\n\t\t};\n\n\t\tconst rightArrowVariants: Variants = {\n\t\t\tnormal: { pathLength: 1, opacity: 1 },\n\t\t\tanimate: {\n\t\t\t\tpathLength: [0, 1],\n\t\t\t\topacity: [0.6, 1],\n\t\t\t\ttransition: { duration: 0.7 * speed, ease: \"easeInOut\", delay: 0.1 },\n\t\t\t},\n\t\t};\n\n\t\tconst slashVariants: Variants = {\n\t\t\tnormal: { pathLength: 1, opacity: 1 },\n\t\t\tanimate: {\n\t\t\t\tpathLength: [1, 0, 1],\n\t\t\t\topacity: [1, 0.4, 1],\n\t\t\t\ttransition: {\n\t\t\t\t\tduration: 1 * speed,\n\t\t\t\t\tease: \"easeInOut\",\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\treturn (\n\t\t\t<motion.div\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\n\t\t\t\tonMouseEnter={handleEnter}\n\t\t\t\tonMouseLeave={handleLeave}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<motion.svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\twidth={size}\n\t\t\t\t\theight={size}\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"m6 8-4 4 4 4\"\n\t\t\t\t\t\tanimate={leftControls}\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tvariants={leftArrowVariants}\n\t\t\t\t\t/>\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"m18 16 4-4-4-4\"\n\t\t\t\t\t\tanimate={rightControls}\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tvariants={rightArrowVariants}\n\t\t\t\t\t/>\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"m14.5 4-5 16\"\n\t\t\t\t\t\tanimate={slashControls}\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tvariants={slashVariants}\n\t\t\t\t\t/>\n\t\t\t\t</motion.svg>\n\t\t\t</motion.div>\n\t\t);\n\t},\n);\n\nCodeXmlIcon.displayName = \"CodeXmlIcon\";\nexport { CodeXmlIcon };\n",
			"type": "registry:ui"
		}
	]
}
