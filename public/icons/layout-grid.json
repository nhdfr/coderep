{
	"name": "layout-grid",
	"type": "registry:ui",
	"registryDependencies": [],
	"dependencies": ["motion"],
	"devDependencies": [],
	"tailwind": {},
	"cssVars": {
		"light": {},
		"dark": {}
	},
	"keywords": ["masonry", "brick", "panel", "grid", "widgets", "layout"],
	"files": [
		{
			"path": "LayoutGridIcon.tsx",
			"content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\n\nexport interface LayoutGridHandle {\n\tstartAnimation: () => void;\n\tstopAnimation: () => void;\n}\n\ninterface LayoutGridProps extends HTMLMotionProps<\"div\"> {\n\tsize?: number;\n\tspeed?: number;\n}\n\nconst LayoutGridIcon = forwardRef<LayoutGridHandle, LayoutGridProps>(\n\t(\n\t\t{ onMouseEnter, onMouseLeave, className, size = 28, speed = 1, ...props },\n\t\tref,\n\t) => {\n\t\tconst controls = useAnimation();\n\t\tconst reduced = useReducedMotion();\n\t\tconst isControlled = useRef(false);\n\n\t\tuseImperativeHandle(ref, () => {\n\t\t\tisControlled.current = true;\n\t\t\treturn {\n\t\t\t\tstartAnimation: () =>\n\t\t\t\t\treduced ? controls.start(\"normal\") : controls.start(\"animate\"),\n\t\t\t\tstopAnimation: () => controls.start(\"normal\"),\n\t\t\t};\n\t\t});\n\n\t\tconst handleEnter = useCallback(() => {\n\t\t\tif (reduced) return;\n\t\t\tif (!isControlled.current) controls.start(\"animate\");\n\t\t}, [controls, reduced]);\n\n\t\tconst handleLeave = useCallback(() => {\n\t\t\tif (!isControlled.current) controls.start(\"normal\");\n\t\t}, [controls]);\n\n\t\tconst gridVariants: Variants = {\n\t\t\tnormal: { scale: 1, rotate: 0 },\n\t\t\tanimate: {\n\t\t\t\tscale: [1, 1.03, 1],\n\t\t\t\trotate: [0, 1, 0],\n\t\t\t\ttransition: {\n\t\t\t\t\tduration: 0.6 * speed,\n\t\t\t\t\tease: \"easeInOut\" as const,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\tconst tileVariants: Variants = {\n\t\t\tnormal: { opacity: 1, scale: 1 },\n\t\t\tanimate: (i: number) => ({\n\t\t\t\topacity: [0.4, 1],\n\t\t\t\tscale: [0.85, 1.08, 1],\n\t\t\t\ttransition: {\n\t\t\t\t\tduration: 0.55 * speed,\n\t\t\t\t\tdelay: 0.08 * i,\n\t\t\t\t\tease: \"easeOut\" as const,\n\t\t\t\t},\n\t\t\t}),\n\t\t};\n\n\t\tconst sweepVariants: Variants = {\n\t\t\tnormal: { x: -26, y: -26, opacity: 0 },\n\t\t\tanimate: {\n\t\t\t\tx: [-26, 26],\n\t\t\t\ty: [-26, 26],\n\t\t\t\topacity: [0, 0.35, 0],\n\t\t\t\ttransition: {\n\t\t\t\t\tduration: 0.8 * speed,\n\t\t\t\t\tease: \"easeInOut\" as const,\n\t\t\t\t\tdelay: 0.1,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\treturn (\n\t\t\t<motion.div\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\n\t\t\t\tonMouseEnter={handleEnter}\n\t\t\t\tonMouseLeave={handleLeave}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<motion.svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\twidth={size}\n\t\t\t\t\theight={size}\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\tclassName=\"lucide lucide-layout-grid-icon lucide-layout-grid\"\n\t\t\t\t>\n\t\t\t\t\t<defs>\n\t\t\t\t\t\t<linearGradient id=\"grid-sweep\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"1\">\n\t\t\t\t\t\t\t<stop offset=\"0%\" stopColor=\"currentColor\" stopOpacity=\"0\" />\n\t\t\t\t\t\t\t<stop offset=\"50%\" stopColor=\"currentColor\" stopOpacity=\"0.35\" />\n\t\t\t\t\t\t\t<stop offset=\"100%\" stopColor=\"currentColor\" stopOpacity=\"0\" />\n\t\t\t\t\t\t</linearGradient>\n\t\t\t\t\t</defs>\n\n\t\t\t\t\t<motion.g variants={gridVariants} initial=\"normal\" animate={controls}>\n\t\t\t\t\t\t<motion.rect\n\t\t\t\t\t\t\twidth=\"7\"\n\t\t\t\t\t\t\theight=\"7\"\n\t\t\t\t\t\t\tx=\"3\"\n\t\t\t\t\t\t\ty=\"3\"\n\t\t\t\t\t\t\trx=\"1\"\n\t\t\t\t\t\t\tvariants={tileVariants}\n\t\t\t\t\t\t\tcustom={0}\n\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\tanimate={controls}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<motion.rect\n\t\t\t\t\t\t\twidth=\"7\"\n\t\t\t\t\t\t\theight=\"7\"\n\t\t\t\t\t\t\tx=\"14\"\n\t\t\t\t\t\t\ty=\"3\"\n\t\t\t\t\t\t\trx=\"1\"\n\t\t\t\t\t\t\tvariants={tileVariants}\n\t\t\t\t\t\t\tcustom={1}\n\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\tanimate={controls}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<motion.rect\n\t\t\t\t\t\t\twidth=\"7\"\n\t\t\t\t\t\t\theight=\"7\"\n\t\t\t\t\t\t\tx=\"14\"\n\t\t\t\t\t\t\ty=\"14\"\n\t\t\t\t\t\t\trx=\"1\"\n\t\t\t\t\t\t\tvariants={tileVariants}\n\t\t\t\t\t\t\tcustom={2}\n\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\tanimate={controls}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<motion.rect\n\t\t\t\t\t\t\twidth=\"7\"\n\t\t\t\t\t\t\theight=\"7\"\n\t\t\t\t\t\t\tx=\"3\"\n\t\t\t\t\t\t\ty=\"14\"\n\t\t\t\t\t\t\trx=\"1\"\n\t\t\t\t\t\t\tvariants={tileVariants}\n\t\t\t\t\t\t\tcustom={3}\n\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\tanimate={controls}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<motion.rect\n\t\t\t\t\t\t\tx=\"2\"\n\t\t\t\t\t\t\ty=\"2\"\n\t\t\t\t\t\t\twidth=\"20\"\n\t\t\t\t\t\t\theight=\"20\"\n\t\t\t\t\t\t\trx=\"3\"\n\t\t\t\t\t\t\tfill=\"url(#grid-sweep)\"\n\t\t\t\t\t\t\tvariants={sweepVariants}\n\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\tanimate={controls}\n\t\t\t\t\t\t\tstyle={{ pointerEvents: \"none\" }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</motion.g>\n\t\t\t\t</motion.svg>\n\t\t\t</motion.div>\n\t\t);\n\t},\n);\n\nLayoutGridIcon.displayName = \"LayoutGridIcon\";\nexport { LayoutGridIcon };\n",
			"type": "registry:ui"
		}
	]
}
