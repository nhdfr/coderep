{
	"name": "brain",
	"type": "registry:ui",
	"registryDependencies": [],
	"dependencies": ["motion"],
	"devDependencies": [],
	"tailwind": {},
	"cssVars": {
		"light": {},
		"dark": {}
	},
	"keywords": [
		"intelligence",
		"mind",
		"thinking",
		"cognition",
		"learning",
		"creativity",
		"memory",
		"neuroscience",
		"psychology",
		"idea",
		"thought",
		"smart",
		"knowledge",
		"wisdom"
	],
	"files": [
		{
			"path": "BrainIcon.tsx",
			"content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\nimport {\n\tforwardRef,\n\tuseCallback,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseRef,\n} from \"react\";\n\nexport interface BrainHandle {\n\tstartAnimation: () => void;\n\tstopAnimation: () => void;\n}\n\ninterface BrainProps extends HTMLMotionProps<\"div\"> {\n\tsize?: number;\n\tspeed?: number;\n}\n\nconst BrainIcon = forwardRef<BrainHandle, BrainProps>(\n\t(\n\t\t{ onMouseEnter, onMouseLeave, className, size = 28, speed = 1, ...props },\n\t\tref,\n\t) => {\n\t\tconst groupControls = useAnimation();\n\t\tconst pulseControls = useAnimation();\n\t\tconst sparkControlsL = useAnimation();\n\t\tconst sparkControlsR = useAnimation();\n\t\tconst reduced = useReducedMotion();\n\t\tconst isControlled = useRef(false);\n\n\t\tuseImperativeHandle(ref, () => {\n\t\t\tisControlled.current = true;\n\t\t\treturn {\n\t\t\t\tstartAnimation: () => {\n\t\t\t\t\tif (reduced) {\n\t\t\t\t\t\tgroupControls.start(\"normal\");\n\t\t\t\t\t\tpulseControls.start(\"normal\");\n\t\t\t\t\t\tsparkControlsL.start(\"normal\");\n\t\t\t\t\t\tsparkControlsR.start(\"normal\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgroupControls.start(\"animate\");\n\t\t\t\t\t\tpulseControls.start(\"animate\");\n\t\t\t\t\t\tsparkControlsL.start(\"animate\");\n\t\t\t\t\t\tsparkControlsR.start(\"animate\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstopAnimation: () => {\n\t\t\t\t\tgroupControls.start(\"normal\");\n\t\t\t\t\tpulseControls.start(\"normal\");\n\t\t\t\t\tsparkControlsL.start(\"normal\");\n\t\t\t\t\tsparkControlsR.start(\"normal\");\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\tconst handleEnter = useCallback(\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (reduced) return;\n\t\t\t\tif (!isControlled.current) {\n\t\t\t\t\tgroupControls.start(\"animate\");\n\t\t\t\t\tpulseControls.start(\"animate\");\n\t\t\t\t\tsparkControlsL.start(\"animate\");\n\t\t\t\t\tsparkControlsR.start(\"animate\");\n\t\t\t\t} else onMouseLeave?.(e as any);\n\t\t\t},\n\t\t\t[groupControls, pulseControls, sparkControlsL, sparkControlsR],\n\t\t);\n\n\t\tconst handleLeave = useCallback(\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (!isControlled.current) {\n\t\t\t\t\tgroupControls.start(\"normal\");\n\t\t\t\t\tpulseControls.start(\"normal\");\n\t\t\t\t\tsparkControlsL.start(\"normal\");\n\t\t\t\t\tsparkControlsR.start(\"normal\");\n\t\t\t\t} else onMouseLeave?.(e as any);\n\t\t\t},\n\t\t\t[groupControls, pulseControls, sparkControlsL, sparkControlsR],\n\t\t);\n\n\t\tconst microTilt: Variants = useMemo(\n\t\t\t() => ({\n\t\t\t\tnormal: { rotate: 0, scale: 1 },\n\t\t\t\tanimate: {\n\t\t\t\t\trotate: [0, -2.2, 1.2, 0],\n\t\t\t\t\tscale: [1, 1.015, 1],\n\t\t\t\t\ttransition: { duration: 0.7 * speed, ease: \"easeInOut\" },\n\t\t\t\t},\n\t\t\t}),\n\t\t\t[],\n\t\t);\n\n\t\tconst spinePulse: Variants = useMemo(\n\t\t\t() => ({\n\t\t\t\tnormal: { pathLength: 1, opacity: 1 },\n\t\t\t\tanimate: {\n\t\t\t\t\tpathLength: [0, 1],\n\t\t\t\t\topacity: [0.55, 1],\n\t\t\t\t\ttransition: {\n\t\t\t\t\t\tduration: 0.5 * speed,\n\t\t\t\t\t\tease: \"easeInOut\",\n\t\t\t\t\t\tdelay: 0.06,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t\t\t[],\n\t\t);\n\n\t\tconst lobeBreatheA: Variants = useMemo(\n\t\t\t() => ({\n\t\t\t\tnormal: { pathLength: 1, opacity: 1, scale: 1 },\n\t\t\t\tanimate: {\n\t\t\t\t\tpathLength: [0, 1],\n\t\t\t\t\topacity: [0.6, 1],\n\t\t\t\t\tscale: [0.98, 1.02, 1],\n\t\t\t\t\ttransition: {\n\t\t\t\t\t\tduration: 0.6 * speed,\n\t\t\t\t\t\tease: \"easeInOut\",\n\t\t\t\t\t\tdelay: 0.12,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t\t\t[],\n\t\t);\n\n\t\tconst lobeBreatheB: Variants = useMemo(\n\t\t\t() => ({\n\t\t\t\tnormal: { pathLength: 1, opacity: 1, scale: 1 },\n\t\t\t\tanimate: {\n\t\t\t\t\tpathLength: [0, 1],\n\t\t\t\t\topacity: [0.6, 1],\n\t\t\t\t\tscale: [1.02, 0.98, 1],\n\t\t\t\t\ttransition: {\n\t\t\t\t\t\tduration: 0.62 * speed,\n\t\t\t\t\t\tease: \"easeInOut\",\n\t\t\t\t\t\tdelay: 0.18,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t\t\t[],\n\t\t);\n\n\t\tconst synapseSparkL: Variants = useMemo(\n\t\t\t() => ({\n\t\t\t\tnormal: { pathLength: 0, opacity: 0 },\n\t\t\t\tanimate: {\n\t\t\t\t\tpathLength: [0, 1],\n\t\t\t\t\topacity: [0, 1, 0],\n\t\t\t\t\ttransition: {\n\t\t\t\t\t\tduration: 0.55 * speed,\n\t\t\t\t\t\tease: \"easeInOut\",\n\t\t\t\t\t\tdelay: 0.26,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t\t\t[],\n\t\t);\n\n\t\tconst synapseSparkR: Variants = useMemo(\n\t\t\t() => ({\n\t\t\t\tnormal: { pathLength: 0, opacity: 0 },\n\t\t\t\tanimate: {\n\t\t\t\t\tpathLength: [0, 1],\n\t\t\t\t\topacity: [0, 1, 0],\n\t\t\t\t\ttransition: {\n\t\t\t\t\t\tduration: 0.55 * speed,\n\t\t\t\t\t\tease: \"easeInOut\",\n\t\t\t\t\t\tdelay: 0.34,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t\t\t[],\n\t\t);\n\n\t\treturn (\n\t\t\t<motion.div\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\n\t\t\t\tonMouseEnter={handleEnter}\n\t\t\t\tonMouseLeave={handleLeave}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<motion.svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\twidth={size}\n\t\t\t\t\theight={size}\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\tclassName=\"lucide lucide-brain-icon lucide-brain\"\n\t\t\t\t>\n\t\t\t\t\t<motion.g\n\t\t\t\t\t\tvariants={microTilt}\n\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\tanimate={groupControls}\n\t\t\t\t\t>\n\t\t\t\t\t\t<motion.path\n\t\t\t\t\t\t\td=\"M12 18V5\"\n\t\t\t\t\t\t\tvariants={spinePulse}\n\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\tanimate={pulseControls}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<motion.path\n\t\t\t\t\t\t\td=\"M15 13a4.17 4.17 0 0 1-3-4 4.17 4.17 0 0 1-3 4\"\n\t\t\t\t\t\t\tvariants={lobeBreatheA}\n\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\tanimate={groupControls}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<motion.path\n\t\t\t\t\t\t\td=\"M17.598 6.5A3 3 0 1 0 12 5a3 3 0 1 0-5.598 1.5\"\n\t\t\t\t\t\t\tvariants={lobeBreatheB}\n\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\tanimate={groupControls}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<motion.path\n\t\t\t\t\t\t\td=\"M17.997 5.125a4 4 0 0 1 2.526 5.77\"\n\t\t\t\t\t\t\tvariants={lobeBreatheA}\n\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\tanimate={groupControls}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<motion.path\n\t\t\t\t\t\t\td=\"M18 18a4 4 0 0 0 2-7.464\"\n\t\t\t\t\t\t\tvariants={lobeBreatheB}\n\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\tanimate={groupControls}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<motion.path\n\t\t\t\t\t\t\td=\"M19.967 17.483A4 4 0 1 1 12 18a4 4 0 1 1-7.967-.517\"\n\t\t\t\t\t\t\tvariants={lobeBreatheA}\n\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\tanimate={groupControls}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<motion.path\n\t\t\t\t\t\t\td=\"M6 18a4 4 0 0 1-2-7.464\"\n\t\t\t\t\t\t\tvariants={lobeBreatheB}\n\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\tanimate={groupControls}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<motion.path\n\t\t\t\t\t\t\td=\"M6.003 5.125a4 4 0 0 0-2.526 5.77\"\n\t\t\t\t\t\t\tvariants={lobeBreatheA}\n\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\tanimate={groupControls}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<motion.path\n\t\t\t\t\t\t\td=\"M8.5 11.6 10.2 10.4\"\n\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\tstrokeWidth=\"1.4\"\n\t\t\t\t\t\t\tvariants={synapseSparkL}\n\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\tanimate={sparkControlsL}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<motion.path\n\t\t\t\t\t\t\td=\"M13.8 9.4 15.6 10.7\"\n\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\tstrokeWidth=\"1.4\"\n\t\t\t\t\t\t\tvariants={synapseSparkR}\n\t\t\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t\t\t\tanimate={sparkControlsR}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</motion.g>\n\t\t\t\t</motion.svg>\n\t\t\t</motion.div>\n\t\t);\n\t},\n);\n\nBrainIcon.displayName = \"BrainIcon\";\nexport { BrainIcon };\n",
			"type": "registry:ui"
		}
	]
}
