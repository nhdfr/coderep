{
	"name": "github",
	"type": "registry:ui",
	"registryDependencies": [],
	"dependencies": ["motion"],
	"devDependencies": [],
	"tailwind": {},
	"cssVars": {
		"light": {},
		"dark": {}
	},
	"keywords": [
		"logo",
		"version control",
		"git",
		"repository",
		"code",
		"octocat"
	],
	"files": [
		{
			"path": "GithubIcon.tsx",
			"content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport type { HTMLMotionProps, Variants } from \"motion/react\";\nimport { motion, useAnimation, useReducedMotion } from \"motion/react\";\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from \"react\";\n\nexport interface GithubIconHandle {\n\tstartAnimation: () => void;\n\tstopAnimation: () => void;\n}\n\ninterface GithubIconProps extends HTMLMotionProps<\"div\"> {\n\tsize?: number;\n\tspeed?: number;\n}\n\nconst GithubIcon = forwardRef<GithubIconHandle, GithubIconProps>(\n\t(\n\t\t{ onMouseEnter, onMouseLeave, className, size = 28, speed = 1, ...props },\n\t\tref,\n\t) => {\n\t\tconst controls = useAnimation();\n\t\tconst reduced = useReducedMotion();\n\t\tconst isControlled = useRef(false);\n\n\t\tuseImperativeHandle(ref, () => {\n\t\t\tisControlled.current = true;\n\t\t\treturn {\n\t\t\t\tstartAnimation: () =>\n\t\t\t\t\treduced ? controls.start(\"normal\") : controls.start(\"animate\"),\n\t\t\t\tstopAnimation: () => controls.start(\"normal\"),\n\t\t\t};\n\t\t});\n\n\t\tconst handleEnter = useCallback(\n\t\t\t(e?: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (reduced) return;\n\t\t\t\tif (!isControlled.current) controls.start(\"animate\");\n\t\t\t\telse onMouseEnter?.(e as any);\n\t\t\t},\n\t\t\t[controls, reduced, onMouseEnter],\n\t\t);\n\n\t\tconst handleLeave = useCallback(\n\t\t\t(e: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\tif (!isControlled.current) {\n\t\t\t\t\tcontrols.start(\"normal\");\n\t\t\t\t} else {\n\t\t\t\t\tonMouseLeave?.(e as any);\n\t\t\t\t}\n\t\t\t},\n\t\t\t[controls, onMouseLeave],\n\t\t);\n\n\t\tconst bodyVariants: Variants = {\n\t\t\tnormal: {\n\t\t\t\tpathLength: 1,\n\t\t\t\tpathOffset: 0,\n\t\t\t\topacity: 1,\n\t\t\t\ttransition: { duration: 0.3 * speed },\n\t\t\t},\n\t\t\tanimate: {\n\t\t\t\tpathLength: [1, 0.6, 1],\n\t\t\t\tpathOffset: [0, 0.4, 0],\n\t\t\t\topacity: [1, 0.7, 1],\n\t\t\t\ttransition: { duration: 1 * speed },\n\t\t\t},\n\t\t};\n\n\t\tconst handWave: Variants = {\n\t\t\tinitial: { rotate: 0, originX: 0.9, originY: 0.5 },\n\t\t\tanimate: {\n\t\t\t\trotate: [0, 20, -15, 0],\n\t\t\t\toriginX: 0.9,\n\t\t\t\toriginY: 0.5,\n\t\t\t\ttransition: { duration: 1 * speed, repeat: Infinity },\n\t\t\t},\n\t\t};\n\n\t\treturn (\n\t\t\t<motion.div\n\t\t\t\tclassName={cn(\"inline-flex items-center justify-center\", className)}\n\t\t\t\tonMouseEnter={handleEnter}\n\t\t\t\tonMouseLeave={handleLeave}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<motion.svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\twidth={size}\n\t\t\t\t\theight={size}\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\tvariants={{\n\t\t\t\t\t\tnormal: { scale: 1, transition: { duration: 0.3 * speed } },\n\t\t\t\t\t\tanimate: {\n\t\t\t\t\t\t\tscale: [1, 1.05, 1],\n\t\t\t\t\t\t\ttransition: { duration: 1 * speed },\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\tanimate={controls}\n\t\t\t\t\tinitial=\"normal\"\n\t\t\t\t>\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"M15 22v-4a4.8 4.8 0 0 0-1-3.5\n               c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5\n               .28-1.15.28-2.35 0-3.5\n               0 0-1 0-3 1.5\n               -2.64-.5-5.36-.5-8 0\n               C6 2 5 2 5 2\n               c-.3 1.15-.3 2.35 0 3.5\n               A5.403 5.403 0 0 0 4 9\n               c0 3.5 3 5.5 6 5.5\n               -.39.49-.68 1.05-.85 1.65\n               -.17.6-.22 1.23-.15 1.85v4\"\n\t\t\t\t\t\tvariants={bodyVariants}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<motion.path\n\t\t\t\t\t\td=\"M9 18c-4.51 2-5-2-7-2\"\n\t\t\t\t\t\tvariants={handWave}\n\t\t\t\t\t\tinitial=\"initial\"\n\t\t\t\t\t\tanimate=\"animate\"\n\t\t\t\t\t/>\n\t\t\t\t</motion.svg>\n\t\t\t</motion.div>\n\t\t);\n\t},\n);\n\nGithubIcon.displayName = \"GithubIcon\";\nexport { GithubIcon };\n",
			"type": "registry:ui"
		}
	]
}
